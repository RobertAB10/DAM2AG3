<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBoxInfo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4wsPCwkjDEfHEQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQLSURBVHhe
        5Zs/TxRBGMbBQjQqWAoWmOgXULDwK4iWxFLBCr6AfwC1E9HGz+C/CB7aWBi10Ri0sBXxD2clNmo0Rkks
        8Hl23s3JscfezbwzOwu/5En2dmeed/bN7e7szGybb1ZWVnqgY9BF6D70CnoLfYH+iLjNfTw2C12AWKdH
        bMoFGn4YugZ9glypQlehfrGPEzSwCxqHPkK++AAxRpeELR40Zid0BvoGheInNAntlmaEB8HboVEo5InX
        w9hsQ7s0KwwIuA96AsXCc+iANM8vCHQa4l/QhtfQdI5Yxga2aViaqQ/M+ZefYiRLeGK5f1WWkbK2XIF0
        LwkYdkC36O7AtNjlgrJ3TRVr7kHbxc4NGPHkn9LVkZAJILxHdYilHTDg3/EG3RQInQBCny1i2zqozB6Y
        FkUkgEyKbWugIu/2mhSVADIk1s2BCnzO2z7qGlFkAn5B+8V+fVCQ173GTa+eioTIBWV5F9eG55T/eEQh
        di19sATl9tZYRsr6YFTCZIMCndDXpOjG5DvU+AUKBzkQsdGZkNNdDQ7wfb7IN7tQZP8LsJMDDZuFMTnt
        GtjJ0ZbNAketak8E/OAYnibvoZPQoIXOQn8h3/TJ6ScJ0OzyklNibQXqPzQ2XpmScElAjdHb/xkUaytQ
        X7snmEU1DbbX/FalDAkg3Qx23GyrUpYEDDDYJbOtSlkSMMFgD8y2KmVJwCyDcT5Om7IkYI7BOCmpjetj
        MFQC5hmMM7PaZHWEjsj55YKyoRKwxGDLZts7RY4INWKZwTg/H4IYE/CbwXxcAlnEmIDPDObjJphFjAl4
        w2AvzbZ3YkzACwbjup0QxJiACoOFGgeMMQHjDMbVWCGIMQFHGYzL2EIQYwL2pAGr5rdXYkvAooRLAmoP
        iWURWwJqs8b40W/2eSW2BByUcAbs4AuMT2JKwIKEqoGdY+aYClzttUOsnaEXNENjJc6JdQ3s1JwaOyG2
        atDTWDvDyd9OsV0NDmh1ipxGhLKgp7F2Zu20WAoOak2Px5qA9afHCQpoLJCINQEjYtcYFOISmUdJcXti
        TEBzS2QICvZCLoukYkvAD6hXrJoDFYaTqnbElgC7UWpU5EcJNqx9zjpCT2PdMpfFonVQmfeDO4lNa3B+
        n1Pc9UvhbUUvmzUDtyG3leMw4GLpmD6OaJbHkNti6RQYbYVu0rUksNu8TZqvAwx5OfiYSdbmOmS/QjwP
        mA9B2uuINeCjzmlOsmkQiP0EXmOx8AwK89FUCgLykhiBilxay9hsg9ud3gUETz+cDJkIxuL9qLgPJ+tB
        Y/gmeR56B/liAWKHaJeEjRM0sA/iJ3Yao82LED+FOyT25QIN74YGoAmoAs1B8xC/CUg/n+c29/EYy7As
        63SLjSfa2v4BP8HuG6JcdOgAAAAASUVORK5CYII=
</value>
  </data>
</root>