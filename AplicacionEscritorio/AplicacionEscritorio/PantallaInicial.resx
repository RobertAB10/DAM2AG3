<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxInfo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4wsPCwkjDEfHEQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQLSURBVHhe
        5Zs/TxRBGMbBQjQqWAoWmOgXULDwK4iWxFLBCr6AfwC1E9HGz+C/CB7aWBi10Ri0sBXxD2clNmo0Rkks
        8Hl23s3JscfezbwzOwu/5En2dmeed/bN7e7szGybb1ZWVnqgY9BF6D70CnoLfYH+iLjNfTw2C12AWKdH
        bMoFGn4YugZ9glypQlehfrGPEzSwCxqHPkK++AAxRpeELR40Zid0BvoGheInNAntlmaEB8HboVEo5InX
        w9hsQ7s0KwwIuA96AsXCc+iANM8vCHQa4l/QhtfQdI5Yxga2aViaqQ/M+ZefYiRLeGK5f1WWkbK2XIF0
        LwkYdkC36O7AtNjlgrJ3TRVr7kHbxc4NGPHkn9LVkZAJILxHdYilHTDg3/EG3RQInQBCny1i2zqozB6Y
        FkUkgEyKbWugIu/2mhSVADIk1s2BCnzO2z7qGlFkAn5B+8V+fVCQ173GTa+eioTIBWV5F9eG55T/eEQh
        di19sATl9tZYRsr6YFTCZIMCndDXpOjG5DvU+AUKBzkQsdGZkNNdDQ7wfb7IN7tQZP8LsJMDDZuFMTnt
        GtjJ0ZbNAketak8E/OAYnibvoZPQoIXOQn8h3/TJ6ScJ0OzyklNibQXqPzQ2XpmScElAjdHb/xkUaytQ
        X7snmEU1DbbX/FalDAkg3Qx23GyrUpYEDDDYJbOtSlkSMMFgD8y2KmVJwCyDcT5Om7IkYI7BOCmpjetj
        MFQC5hmMM7PaZHWEjsj55YKyoRKwxGDLZts7RY4INWKZwTg/H4IYE/CbwXxcAlnEmIDPDObjJphFjAl4
        w2AvzbZ3YkzACwbjup0QxJiACoOFGgeMMQHjDMbVWCGIMQFHGYzL2EIQYwL2pAGr5rdXYkvAooRLAmoP
        iWURWwJqs8b40W/2eSW2BByUcAbs4AuMT2JKwIKEqoGdY+aYClzttUOsnaEXNENjJc6JdQ3s1JwaOyG2
        atDTWDvDyd9OsV0NDmh1ipxGhLKgp7F2Zu20WAoOak2Px5qA9afHCQpoLJCINQEjYtcYFOISmUdJcXti
        TEBzS2QICvZCLoukYkvAD6hXrJoDFYaTqnbElgC7UWpU5EcJNqx9zjpCT2PdMpfFonVQmfeDO4lNa3B+
        n1Pc9UvhbUUvmzUDtyG3leMw4GLpmD6OaJbHkNti6RQYbYVu0rUksNu8TZqvAwx5OfiYSdbmOmS/QjwP
        mA9B2uuINeCjzmlOsmkQiP0EXmOx8AwK89FUCgLykhiBilxay9hsg9ud3gUETz+cDJkIxuL9qLgPJ+tB
        Y/gmeR56B/liAWKHaJeEjRM0sA/iJ3Yao82LED+FOyT25QIN74YGoAmoAs1B8xC/CUg/n+c29/EYy7As
        63SLjSfa2v4BP8HuG6JcdOgAAAAASUVORK5CYII=
</value>
  </data>
</root>